# Generated by Django 4.1 on 2024-12-03 02:14

from django.conf import settings  # Importa la configuración de Django, especialmente el modelo de usuario.
from django.db import migrations, models  # Importa los módulos necesarios para definir migraciones y modelos.
import django.db.models.deletion  # Importa la funcionalidad para manejar eliminaciones de relaciones.

# Definición de la migración.
class Migration(migrations.Migration):

    initial = True  # Esta es la primera migración para la base de datos, se aplica cuando se crea el modelo.

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),  # Establece la dependencia de esta migración al modelo de usuario que se utiliza en el proyecto.
    ]

    operations = [
        # Creación del modelo Categoria
        migrations.CreateModel(
            name='Categoria',  # Nombre del modelo.
            fields=[  # Definición de los campos del modelo.
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),  # Campo auto incremental para la clave primaria.
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),  # Nombre de la categoría, campo de texto corto.
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),  # Fecha y hora de creación del registro.
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Fecha de edición')),  # Fecha y hora de la última edición.
            ],
            options={  # Opciones para personalizar el modelo.
                'verbose_name': 'categoría',  # Nombre singular en la administración.
                'verbose_name_plural': 'categorías',  # Nombre plural en la administración.
            },
        ),
        
        # Creación del modelo Pelicula
        migrations.CreateModel(
            name='Pelicula',  # Nombre del modelo.
            fields=[  # Definición de los campos del modelo.
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),  # Campo auto incremental para la clave primaria.
                ('titulo', models.CharField(max_length=100)),  # Título de la película.
                ('sinopsis', models.TextField()),  # Sinopsis de la película.
                ('fecha_estreno', models.DateField()),  # Fecha de estreno de la película.
                ('duracion', models.IntegerField(help_text='Duración en minutos')),  # Duración de la película en minutos.
                ('director', models.CharField(max_length=100)),  # Director de la película.
                ('image', models.ImageField(default='images/default.jpg', upload_to='images/')),  # Imagen asociada a la película.
                ('created', models.DateTimeField(auto_now_add=True)),  # Fecha de creación del registro.
                ('updated', models.DateTimeField(auto_now=True)),  # Fecha de la última actualización.
            ],
            options={  # Opciones para personalizar el modelo.
                'verbose_name': 'película',  # Nombre singular en la administración.
                'verbose_name_plural': 'películas',  # Nombre plural en la administración.
            },
        ),
        
        # Creación de la tabla intermedia PeliculaCategoria para la relación muchos a muchos entre Pelicula y Categoria.
        migrations.CreateModel(
            name='PeliculaCategoria',
            fields=[  # Definición de los campos del modelo.
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),  # Campo auto incremental para la clave primaria.
                ('fecha_asignacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de asignación')),  # Fecha en que se asignó la categoría a la película.
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.categoria')),  # Relación con la categoría. Si se elimina la categoría, se elimina esta relación.
                ('pelicula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.pelicula')),  # Relación con la película. Si se elimina la película, se elimina esta relación.
            ],
            options={  # Opciones para personalizar el modelo.
                'verbose_name': 'relación película-categoría',  # Nombre singular de la relación.
                'verbose_name_plural': 'relaciones película-categoría',  # Nombre plural de la relación.
                'unique_together': {('pelicula', 'categoria')},  # Asegura que no haya duplicados de la misma película y categoría.
            },
        ),
        
        # Añadiendo una relación muchos a muchos entre Pelicula y Categoria utilizando la tabla intermedia PeliculaCategoria.
        migrations.AddField(
            model_name='pelicula',  # Modelo al que se le agrega el campo.
            name='genero',  # Nombre del campo agregado.
            field=models.ManyToManyField(through='database.PeliculaCategoria', to='database.categoria', verbose_name='Categorías'),  # Relación muchos a muchos con Categoria, usando la tabla intermedia PeliculaCategoria.
        ),
        
        # Creación del modelo Comentario
        migrations.CreateModel(
            name='Comentario',  # Nombre del modelo.
            fields=[  # Definición de los campos del modelo.
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),  # Campo auto incremental para la clave primaria.
                ('texto', models.TextField(verbose_name='Comentario')),  # Campo para almacenar el texto del comentario.
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),  # Fecha y hora de creación del comentario.
                ('pelicula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comentarios', to='database.pelicula', verbose_name='Película')),  # Relación con la película comentada. Si se elimina la película, se eliminan los comentarios relacionados.
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),  # Relación con el usuario que hizo el comentario. Si se elimina el usuario, se eliminan los comentarios relacionados.
            ],
            options={  # Opciones para personalizar el modelo.
                'verbose_name': 'comentario',  # Nombre singular del modelo en la administración.
                'verbose_name_plural': 'comentarios',  # Nombre plural del modelo en la administración.
                'ordering': ['-fecha_creacion'],  # Ordena los comentarios de más reciente a más antiguo.
            },
        ),
    ]
